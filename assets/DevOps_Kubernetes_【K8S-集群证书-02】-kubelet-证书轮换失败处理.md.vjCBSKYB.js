import{_ as s,c as i,o as e,a1 as a}from"./chunks/framework.CG9TfmPt.js";const o=JSON.parse('{"title":"K8S-Kubelet-客户端证书","description":"","frontmatter":{},"headers":[],"relativePath":"DevOps/Kubernetes/【K8S-集群证书-02】-kubelet-证书轮换失败处理.md","filePath":"DevOps/Kubernetes/【K8S-集群证书-02】-kubelet-证书轮换失败处理.md"}'),t={name:"DevOps/Kubernetes/【K8S-集群证书-02】-kubelet-证书轮换失败处理.md"},l=a(`<h1 id="k8s-kubelet-客户端证书" tabindex="-1">K8S-Kubelet-客户端证书 <a class="header-anchor" href="#k8s-kubelet-客户端证书" aria-label="Permalink to &quot;K8S-Kubelet-客户端证书&quot;">​</a></h1><h2 id="一、kubelet证书说明" tabindex="-1">一、Kubelet证书说明 <a class="header-anchor" href="#一、kubelet证书说明" aria-label="Permalink to &quot;一、Kubelet证书说明&quot;">​</a></h2><ul><li><code>/var/lib/kubelet</code> -- 默认的kubelet的工作目录，通过--root-dir指定</li><li><code>/etc/kubernetes/kubelet.conf</code> -- kubelet访问集群的配置文件</li><li><code>/var/lib/kubelet/pki</code> -- kubelet客户端证书存放地址</li><li>默认kubeadm配置kebelet自动轮换客户端证书，/etc/kubernetes/kubelet.conf中指定/var/lib/kubelet/pki/kubelet-client-current.pem</li></ul><h2 id="二、kubelet证书有效期查询" tabindex="-1">二、Kubelet证书有效期查询 <a class="header-anchor" href="#二、kubelet证书有效期查询" aria-label="Permalink to &quot;二、Kubelet证书有效期查询&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">openssl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> x509</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/lib/kubelet/pki/kubelet-client-current.pem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -noout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Not</span></span></code></pre></div><h2 id="三、kubelet证书轮换失败处理" tabindex="-1">三、Kubelet证书轮换失败处理 <a class="header-anchor" href="#三、kubelet证书轮换失败处理" aria-label="Permalink to &quot;三、Kubelet证书轮换失败处理&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 从故障节点备份和删除 /etc/kubernetes/kubelet.conf 和 /var/lib/kubelet/pki/kubelet-client</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 在集群中具有 /etc/kubernetes/pki/ca.key 的、正常工作的控制平面节点上 执行以下命令,其中$NODE 必须设置为集群中现有故障节点的名称</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubeadm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kubeconfig</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --org</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> system:nodes</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --client-name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> system:node:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$NODE </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">--config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kubeadm-config.yaml</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kubelet.conf</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 将得到的 kubelet.conf 文件复制到故障节点上，作为 /etc/kubernetes/kubelet.conf</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 在故障节点上重启 kubelet（systemctl restart kubelet），等待 /var/lib/kubelet/pki/kubelet-client-current.pem 重新创建</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 手动编辑 kubelet.conf 指向轮换的 kubelet 客户端证书，方法是将 client-certificate-data 和 client-key-data 替换为：client-certificate: /var/lib/kubelet/pki/kubelet-client-current.pem，client-key: /var/lib/kubelet/pki/kubelet-client-current.pem</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">6</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 重新启动 kubelet &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">确保节点状况变为</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Ready</span></span></code></pre></div>`,7),k=[l];function n(h,p,r,d,c,u){return e(),i("div",null,k)}const g=s(t,[["render",n]]);export{o as __pageData,g as default};
